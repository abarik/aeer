[{"path":"index.html","id":"üdvözöljük","chapter":"Üdvözöljük","heading":"Üdvözöljük","text":"Ez honlap az Adatkezelés és egyváltozós elemzések c. könyv elektronikus változatát tartalmazza. nyomtatásban megjelent könyvhöz képest számos bővítést tartalmaz:kitűzött feladatok megoldásaaz R grafikus lehetőségeit tartamazó fejezet bővebb hagyományos grafika résszel.teljes könyv, az adatbázisok és az R kódok megtalálhatók következő címen.könyvet Máth János lektorálta, és Friss Kinga illusztrálta.","code":""},{"path":"eloszo.html","id":"eloszo","chapter":"Előszó","heading":"Előszó","text":"Kedves Olvasó!Köszönjük, hogy bizalmat szavaz könyvünknek, és az R megismeréséhez ezt az utat választja. Az első lépésektől komplett adatelemzési feladatok megoldásáig vezetjük az Olvasót, és főként kezdő vagy újrakezdő felhasználókhoz szólunk. Utunk során áttekintjük az adatfeldolgozás minden lépését: az adatok beolvasását, előkészítését, elemzését és az eredmények publikálását .Könyvünk összesen 11 fejezetet tartalmaz. Az egyes fejezeteket alkotó alfejezeteket három különböző ikonnal jelöltük meg, amelyek jelzőtáblaként szolgálnak az R megismerésének útján. Az egyes ikonok jelentése következő:\nEgy hegy. Az így jelölt fejezet az R alaptudás része, megismerése feltétlenül javasolt. könyvben megfogalmazott célok ezen fejezetek megismerésével elérhetők, azaz komplett adatelemzéseket hajthatunk végre csupán ezek végigolvasásával .\n\nKét hegy. Kiegészítő tudást tartalmazó fejezetek. Újabb eszközök megismerését teszik lehetővé, és/vagy hozzájárulnak az egy hegy fejezetek mélyebb megértéséhez.\n\nHárom hegy. Az R ismeretek további részletezése, meglévő eszközök finomabb kezelése, vagy további beállítási lehetőségek olvashatók ezekben fejezetekben. Elképzelhető, hogy ritkábban felmerülő problémák megoldásához kapunk itt segítséget.\nfejezetek hármas tagolása azt célt szolgálja, hogy minél hamarabb örömet és sikert okozhasson az R használata, ugyanakkor további olvasással részletesebb ismeretek utáni vágyunkat kielégíthessük. Könyvünk olvasását tehát az 1. fejezet egy hegy alfejezetével (1.1. Elindulás) érdemes kezdeni, ott kapunk ajánlást folytatásra. további fejezetek olvasási sorrendje teljes mértékben az elvégzendő feladattól, tudásunktól és kíváncsiságunktól függ.Az R tanulmányozása kitartást és némi időt igényel. Nagyon fontos szerepet kap gyakorlás, ezért minden fejezet végén találunk feladatokat.\nFeladatok. fejezet végi feladatok megoldásával jelentősen hozzájárulunk magabiztos R tudás megszerzéséhez. Találunk szórakoztató és érdekes feladatokat .\nfejezetek végén összefoglaljuk tanultakat. Megismételjük legfontosabb fogalmakat és felsoroljuk megismert függvényeket.\nÖsszefoglalás. Miről szólt az előszó? könyv 11 fejezetet tartalmaz, az alfejezeteket három különböző ikonnal jelöltük: egy hegy, két hegy és három hegy. Az alfejezetek végén összefoglalást és feladatokat találunk.\nkönyvben használt adatbázisokat és R kódokat, valamint kitűzött feladatok megoldását elérhetővé tettük: https://github.com/abarik/aeer.Örömmel fogadjuk Olvasóink észrevételeit az abari.kalman@gmail.com címen.","code":""},{"path":"itt-kezdodik.html","id":"itt-kezdodik","chapter":"1 Itt kezdődik","heading":"1 Itt kezdődik","text":"","code":""},{"path":"itt-kezdodik.html","id":"Itt-kezdodik-1-szint","chapter":"1 Itt kezdődik","heading":"1.1 Elindulás","text":"\nEbben fejezetben:\n\nbemutatunk egy konkrét adatelemzési példát,\n\nés áttekintjük könyv tartalmát,\n\nlehetőséget adunk az előzetes R ismeretek felmérésére,\n\nés segítünk megfelelő fejezet kiválasztására folytatáshoz.\nKönyvünk elsődleges célja az R bemutatása kezdő felhasználók számára, de minden bizonnyal azok találni fognak hasznos részeket, akik már rendelkeznek R ismeretekkel. Bevezetést nyújtunk az R által lefedett három nagy terület mindegyikébe: az adatkezelésbe, grafikus megjelenítésbe és az adatelemzésbe . leírtak megértéséhez statisztikai alapismereteken túl semmilyen előzetes tudás nem szükséges.egy konkrét adatelemzési példa segítségével bemutatjuk, hogy mit nyújt e könyv az Olvasó számára. bevezető példa megoldása során az előismeretekkel rendelkező Olvasó saját R tudását felmérheti, és ezzel egyben segítséget kaphat az ismeretéhez és céljához legjobban illeszkedő fejezet kiválasztására, amellyel tovább folytathatja az olvasást.Bevezető példa: lányok és fiúk eltérő Instagram használata\nFeltételezésünk szerint az Instagram népszerűbb lányok körében, mint fiúknál. Egy 2017-es kutatásunkban 10-14 éves lányok és fiúk mobilhasználati szokásait hasonlítottuk össze, és az Instagram használat gyakoriságára rákérdeztünk. Az összegyűjtött adatok mobil_2017.xlsx állományban állnak rendelkezésre.\nNézzük az adatelemzés lépéseit és egyben könyvünk felépítését!2. fejezet: Mi az R? bevezető példa megoldását R-ben fogjuk elvégezni (és nem más eszközben, mint például az SPSS, jamovi, JASP, SAS stb.). Érdemes tehát ismerni az R céljait és lehetőségeit, jó ha van egy összképünk használt statisztikai programcsomagunkról. Ezeket az áttekintő ismereteket nyújtja 2 fejezet.3. fejezet: Az R telepítése. Az adatelemzés konkrét lépéseinek elvégzéséhez telepített Alap R és RStudio szükséges. Ha ezek nem állnak rendelkezésre, vagy még nem találkoztunk ezekkel az eszközökkel, akkor 3. fejezet nekünk szól.4. fejezet: Munka az R-ben. Az adatelemzés végrehajtásához az RStudio-t ajánljuk, és azon belül pedig projektek használatát szorgalmazzuk. 4. fejezetben megismerjük az RStudio legalapvetőbb funkcióit, parancsállományok létrehozását és futtatását.fenti előzmények után elkezdhetjük bevezető példa megoldását:indítsuk el az RStudio-t,hozzunk létre egy új projektet,hozzunk létre egy új RMarkdown állományt,helyezzük el lentebb szereplő R parancsokat az RMarkdown állomány egyes csonkjaiban.5. fejezet: Az R nyelv. Az R parancsok létrehozásának vannak szabályai, amelyeket munka során kell tartanunk. Ismernünk kell jó néhány függvényt, és általában el kell tudnunk igazodni az R nyelvben. Az 5. fejezet ezért kulcsfontosságú, tanulmányozzuk alaposan, és lehetőleg minden kitűzött feladatát oldjuk meg.6. fejezet: Beolvasás Az adatelemzés első lépése az adatállomány beolvasása. Adataink változatos formában állhatnak rendelkezésre, 6. fejezetben ezek beolvasására kapunk receptet.bevezető példa megoldásához az RMarkdown állomány egyik csonkját bővítsük lenti sorokkal.7. fejezet: Adatkezelés statisztikai elemzés elkezdése előtt számos adatkezelési tevékenységre lehet szükség. Ezeket sokszor rendkívül időigényes folyamatokat 7. fejezetben részletezzük.bevezető példa megoldásához az RMarkdown állomány egyik csonkját bővítsük lenti sorokkal. Az adatkezelés legtöbbször beolvasott állomány jellemzőinek lekérésével kezdődik.karakteres vagy numerikus vektorok faktorrá konvertálása az egyik leggyakoribb előkészítő parancs.faktor szintjeinek elnevezésével beszédesebb szintneveket hozhatunk létre.faktorból faktor transzformáció során összevonhatunk faktorszinteket, így csökkenthetjük kiinduló faktor szintszámát.táblázatok és ábrák megfelelő megjelenéséhez, ordinális változók esetében, végezzük el faktorszintek sorrendbe állítását.8. fejezet: Mutatók és táblázatok. Ha az adatainkat már megfelelő formába hoztuk, akkor továbbléphetünk az elemzés felé. 8. fejezet leíró statisztikai elemzésekből mutatók és táblázatok létrehozását mutatja . kétdimenzós gyakorisági táblázatot hozunk létre, tab néven, két faktor változó segítségével.9. fejezet: Grafika. grafikus megjelenítés leíró statisztikai elemzés része. 9. fejezetben részletesebben olvashatunk az ábrák létrehozásáról. Faktor változók esetén az oszlopdiagram megfelelő ábrázolási forma lehet, egy ilyen ábrát hozunk létre.10. fejezet: Hipotézisvizsgálatok. statisztikai hipotézisvizsgálat minden adatelemzés központi része. 10. fejezetben az egy- és kétváltozós elemzéseket mutatjuk . függetlenség-vizsgálatot hajtunk végre nominális és az ordinális változók között, korábban létrehozott tab objektum felhasználásával.11. fejezet: Publikálás. Az elemzés eredményének publikációkész formába alakítása az adatelemzési folyamat utolsó lépése. 11. fejezetben megismerjük azokat legegyszerűbb folyamatokat, amelyekkel többnyire formanyelvtől függetlenül, publikációkész eredményközlést végezhetünk.bevezető példa elemzése során kapott eredmények publikálását segíti, ha következő sorokkal kiegészítjük fenti, leíró statisztikai elemzéseket. Egy soronként vett kétdimenziós gyakorisági táblázat és egy háttértárra mentett ábra lenti sorok eredménye. Végül fordítsuk le az RMarkdown állományt Knit nyomógomb segítségével. kapott HTML (vagy Word/PDF) állomány és háttértáron keletkezett képállomány jelentősen segíti az eredmények publikálását.bevezető példa megoldásához természetesen hipotézisvizsgálat szöveges értékelés hozzátartozik, de ezt az alfejezet végén szereplő egyik kitűzött feladatra halasztjuk. hangsúly könyv vázlatos tartalomjegyzékének bemutatásán volt, részletesebb, de felsorolásszerű tartalomjegyzéket következő két alfejezetben találunk.\nÖsszefoglalás\n\nEbben az 1. alfejezetben egy bevezető példát oldottunk meg. Ennek segítségével illusztrálni tudtuk további alfejezetek tartalmát. 2. fejezetben áttekintést fogunk adni az R-ről, 3.-ban az Alap R és RStudio telepítését, 4.-ben az RStudio használatát mutatjuk . Az 5. fejezetben kellő részletességgel ismertetjük az R nyelvet. további fejezetekben az adatelemzés szokásos lépéseit vesszük sorra, 6. fejezetben beolvasást, 7. fejezetben az adatok előkészítését, 8. és 9. fejezetben leíró statisztikai műveleteket mutatjuk . 10. fejezet az egy- és kétváltozós hipotézisvizsgálatoké, az utolsó 11. fejezet az eredmények publikálását foglalja össze.\n\nFeladatok\n\nMilyen online vagy nyomtat könyvek segítik az R elsajátítását? Próbáljuk összegyűjteni magyar nyelvű könyveket !\n\nTérképezzük fel az online videókurzusokat az R tanulásához!\n\nbevezető példa (lányok és fiúk eltérő Instagram használata) megoldásában hipotézisvizsgálat alapján adjunk szöveges értékelést!\n","code":"\nlibrary(rio)                                   # rio csomag betöltése\nmobil <- import(file = \"adat/mobil_2017.xlsx\") # beolvasás\nstr(mobil)              # dataframe szerkezete\nnames(mobil)            # változónevek  \nunique(mobil$nem)       # különböző értékek - nem\nunique(mobil$instagram) # különböző értékek - instagram\nmobil$nem <- factor(mobil$nem, levels = c(\"Nő\", \"Férfi\"))\nmobil$instagram <- factor(mobil$instagram)\nlevels(mobil$instagram) <- c(\"Soha\",\"Ritkán\",\"Hav.t\",\"Het.t\",\"Nap.e\",\"Nap.t\")\nmobil$instagram <- car::recode(mobil$instagram,'c(\"Hav.t\",\"Het.t\")=\"Gyakran\";\n                                       c(\"Nap.t\", \"Nap.e\")=\"Nagyon gyakran\"')\nmobil$instagram <- factor(mobil$instagram, \n          levels=c(\"Soha\", \"Ritkán\", \"Gyakran\", \"Nagyon gyakran\"))\ntab <- table(x = mobil$nem, y = mobil$instagram)\nnames(dimnames(tab)) <- c(\"Nem\", \"Instagram\")\naddmargins(tab)\n#>        Instagram\n#> Nem     Soha Ritkán Gyakran Nagyon gyakran Sum\n#>   Nő      15      1       4             26  46\n#>   Férfi   13      1       1              6  21\n#>   Sum     28      2       5             32  67\nlibrary(ggplot2)\nggplot(data = mobil, aes(x=instagram, y=stat(prop), group=nem, fill=nem)) + \n  geom_bar(position = \"dodge\", col=\"gray9\") + theme_bw() + \n  scale_y_continuous(labels = scales::label_percent(), limits=c(0,0.8)) +\n  geom_text(stat=\"count\", aes(y=stat(prop), group=nem,\n                              label=scales::percent(stat(prop), accuracy=1)), \n            position=position_dodge(0.9), vjust=-0.26, size=3.1) +\n  scale_fill_brewer() + labs(x=\"Instagram használat\", y=\"\")\nlibrary(coin)\nlbl_test(tab)\n#> \n#>  Asymptotic Linear-by-Linear Association Test\n#> \n#> data:  Instagram (ordered) by Nem (Nő, Férfi)\n#> Z = 2.3584, p-value = 0.01835\n#> alternative hypothesis: two.sided\npander::pander(descr::CrossTable(x = mobil$nem, y = mobil$instagram, \n    format = \"SPSS\", prop.c = F, prop.chisq = F, prop.t = F), digits=1)\np1 <- ggplot(data = mobil, aes(x=nem, fill=instagram)) + \n  geom_bar(position = \"dodge\") + theme_bw()\nggsave(filename = \"output/kep/instagram_1.png\", plot=p1)"},{"path":"itt-kezdodik.html","id":"a-könyv-felépítése","chapter":"1 Itt kezdődik","heading":"1.2 A könyv felépítése","text":"\nEbben fejezetben:\n\nbemutatjuk könyv részletes felépítését,\n\nezzel tovább segítjük választást folytatáshoz.\nkönyv 11 fejezetből áll, és fejezetenként 3 vagy több alfejezetből. röviden bemutatjuk az egyes alfejezetek tartalmát.\nÖsszefoglalás\n\nEbben részben röviden bemutattuk könyv összes alfejezetét. későbbiekben térképként használhatja az Olvasó az itt ismertetett táblázatot.\nFeladatokAz adatfeldolgozás 4 lépése következő: (1) adatok beolvasása, (2) adatok előkészítése elemzésre, (3) adatok elemzése és (4) az eredmények publikálása. könyv mely fejezetei tartoznak az adatfeldolgozás fenti lépéseihez?Az R-rel való munka általunk javasolt módja: RStudio-ban, projektmódban, R vagy RMarkdown állományokat szerkesztünk és hajtunk végre. Mely fejezetekben találunk hasznos információkat az R ezen használatával kapcsolatban?","code":""},{"path":"itt-kezdodik.html","id":"próbák-listája","chapter":"1 Itt kezdődik","heading":"1.3 Próbák listája","text":"\nEbben fejezetben:\n\náttekintést adunk az egy- és kétváltozós hipotézisvizsgálatokról.\n10. fejezetben bemutatjuk az egy- és kétváltozós hipotézisvizsgálatok végrehajtását. Ebben fejezetben felsoroljuk legfontosabb próbákat, összesen öt táblázatban soroljuk fel őket:egy mintát vizsgáló próbák (1.1 táblázat),páros mintát vizsgáló próbák (1.2 táblázat),két független mintát vizsgáló próbák (1.3 táblázat),több összetartozó mintát vizsgáló próbák (1.4 táblázat),több független mintát vizsgáló próbák (1.5 táblázat).táblázatokban megadjuk, hogy vizsgálatnak mi célja, vagyis populációbeli változó(k) melyik paraméterére vonatkoznak próbák, várható értékre, mediánra, varianciára vagy valószínűségre. 10. fejezetben foglalkozunk az eloszlásvizsgálatok közül normalitást ellenőrző próbákkal , így 1.1 táblázat ezeket számba veszi.TÁBLÁZAT 1.1:  Egy minta vizsgálataTÁBLÁZAT 1.2:  Páros minta vizsgálataTÁBLÁZAT 1.3:  Két független minta vizsgálataTÁBLÁZAT 1.4:  Több összetartozó minta vizsgálataTÁBLÁZAT 1.5:  Több független minta vizsgálata\nÖsszefoglalás\n\nEbben részben rövid áttekintést adtunk könyv 10. fejezetében sorra kerülő statisztikai próbákról. Megneveztük próbákat, R parancsokkal szemléltettük használatukat, valamint jeleztük céljukat. táblázatok áttekintésével képet kaphatunk arról, hogy későbbiekben milyen jellegű statisztikai következtetéseket tudunk levonni az R használatával.\nFeladatokMinden statisztikai próba esetében négy dolgot érdemes tudni: (1) statisztikai próba neve, (2) null- és ellenhipotézise, (3) alkalmazási feltételei, és (4) próba végrehajtásának módja valamely statisztikai programcsomagban. 10. fejezetben statisztikai próbák végrehajtását természetesen R-beli eszközökkel mutatjuk . Ismerjük fenti táblázatokban megnevezett próbák null- és ellenhipotézisét, valamint az alkalmazási feltételeit? Próbáljuk ezeket felidézni! Hol találunk ezekről információt?Mely próbák maradtak ki ebből könyvből? Hol találunk ezek R-beli végrehajtására példát?\n","code":""},{"path":"mi-az-r.html","id":"mi-az-r","chapter":"2 Mi az R?","heading":"2 Mi az R?","text":"","code":""},{"path":"mi-az-r.html","id":"az-r-bemutatása","chapter":"2 Mi az R?","heading":"2.1 Az R bemutatása","text":"\nEbben fejezetben:\n\nmegismerjük az R jellemzőit,\n\nmegtudjuk, hogy melyek parancssoros interfész előnyei,\n\nmegismerjük az Alap R fogalmát,\n\nkörülhatároljuk az R nyelv, az Alap R és csomag fogalmát.\n","code":""},{"path":"mi-az-r.html","id":"az-r-jellemzői","chapter":"2 Mi az R?","heading":"2.1.1 Az R jellemzői","text":"Az R egy magas szintű programozási nyelv és környezet, amelynek legfontosabb felhasználása az adatelemzés és az ahhoz kapcsolódó grafikus megjelenítés. Három alapvető jellemzője kiemeli többi statisztikai programcsomag közül: (1) az R ingyenesen telepíthető és használható; (2) az R nyílt forrású, így bárki hozzájárulhat az R fejlesztéséhez, azaz létrehozhat új csomagokat, és ezzel kiegészítheti az R tudását; és (3) az R felhasználók rendkívül aktív és befogadó online közösséget alkotnak, szinte minden felmerülő kérdésünkre hamar választ kaphatunk.Álljon itt egy bővített lista azokról jellemzőkről, amelyek vonzóvá tehetik számunkra az R statisztikai programcsomagot.Az R szabad szoftver, bárki ingyenesen letöltheti és használhatja. Ez egyfelől megkönnyíti az oktatási intézmények, tanszékek és oktatók munkáját, hiszen nincs szükség kereskedelmi programok licenszeléséből adódó pénzügyi vagy más természetű nehézségek kezelésére. Másrészt hallgatók statisztika kurzusok során tanultakat otthon vagy később munkájukban felhasználhatják.Az R platform-független, azaz Windows, Linux és macOS környezetben használható. Nem kell lemondanunk kedvenc operációs rendszerünkről, ha az R-t szeretnénk használni.Az R egy teljes értékű programozási nyelv, nem csak egy statisztikai programcsomag önmagában.Az R statisztikai módszerek szinte végtelen választékát kínálja. R-ben felhasználható statisztikai eljárásokat statisztikusok fejlesztik folyamatosan és csomagok formájában teszik elérhetővé. Valószínű, hogy egy új statisztikai módszer leghamarabb az R-ben válik elérhetővé.Az R rendkívül gazdag grafikus lehetőségekkel rendelkezik.statisztikai szakirodalomban és az egyetemi oktatók körében egyre elterjedtebb az R, mint közös (statisztikai program)nyelv használata. Ha valamilyen statisztikai problémára keressük megoldást, vagy csak konzultálunk egy statisztikussal, az R ismerete (akár csak olvasási szinten) rendkívüli előnyt jelenthet.Az R igen jól dokumentált, beépített súgón kívül számos könyv és leírás érhető el.Az R parancssoros interfésszel rendelkezik, amely számos előnnyel jár. Egyrészt szkript állományok létrehozása és végrehajtása statisztikai elemzések megismételhetőségét biztosítják, másrészt ez az oktatók és hallgatók könnyebb kommunikációját lehetővé teszi.Az R az adatelemzés eredményének sokszínű publikálását biztosítja. Az RMarkdown formanyelv segítségével HTML, PDF és Word dokumentumot, illetve prezentációs diákat vagy akár kész cikkeket hozhatunk létre. Shiny csomag interaktív Webes alkalmazások építését teszi lehetővé.Mára az R használata szinte egyet jelent az ingyenesen elérhető RStudio használatával, amely egy kényelmes integrált fejlesztői környezetet biztosít parancsállományok létrehozásához.Érdemes bepillantani az R árnyékosabb oldalába . Az R egyik gyengesége, hogy nagy adatbázisok kezeléséhez erős hardverre van szüksége, de legtöbb felhasználás során ez semmilyen problémát nem okoz. másik gyengeség, hogy az R elsajátításához nem kevés idő és kitartás szükséges. Jelen könyv éppen ezt folyamatot kívánja megkönnyíteni és lerövidíteni.","code":""},{"path":"mi-az-r.html","id":"a-r-parancssoros","chapter":"2 Mi az R?","heading":"2.1.2 A R parancssoros","text":"Az R alapvető használata során parancsokat gépelünk és hajtunk végre. Ez lényegesen eltér ma megszokott felhasználói programok világától, ahol egy grafikus felhasználói felületen egérrel vagy az ujjunkkal mutogatjuk el kívánt tevékenységet. Az R egészen más megközelítést vall, használata kezdeti lépésektől nagyfokú figyelmet és pontosságot követel. parancsokban kell gondolkodnunk, ám ezt végig áthatja tudom mit csinálok elv, így némi idő elteltével érezni fogjuk, hogy az R megszelídül, már nem köt bele minden “szavunkba”, egyre több dologra tudjuk rávenni, és végül egy rendkívül értékes társsá válik. Jelen könyv ezen az úton szeretné végigvezetni az Olvasót.Már tanulás elején szeretnénk tisztázni, hogy az R elsajátításához nem szükséges programozói alaptudás. Az R felhasználók többsége egyáltalán nem programozó, és mindennapi adatelemző munka sem igényli az R nyelv programozói fokú ismeretét. Természetesen, ha rendelkezünk ilyen irányú előtanulmányokkal tanulási folyamat néhány szakasza lerövidíthető, de könyvünk elsősorban azok számra íródott, akik programozási nyelvekkel korábban nem találkoztak, és nem vágynak az R ilyen mélységű ismeretére. Az R nyelv elsajátítása során bevezetjük azokat az egyszerű fogalmakat, amelyeket nem nélkülözhetők az adatelemzés során, azonban az R programozásához más szakkönyveket javaslunk olvasásra.","code":""},{"path":"mi-az-r.html","id":"mi-valójában-az-r","chapter":"2 Mi az R?","heading":"2.1.3 Mi valójában az R?","text":"Az R nyelv fejlesztője az R Core Team. Az R nyelv egy rendkívül népszerű szkriptnyelv, több millióan használják világszerte. Elsősorban adatelemzésre, adatmodellezésre és grafikus megjelenítésre, vagyis arra, amit ma adattudományok (data science) alatt értünk. Azonban az R nyelv önmagában nem szoftver, hanem egy rendkívül rugalmas szkriptnyelv, amely például előírja, hogy milyen szintaktikai szabályok mentén fogalmazhatjuk meg az utasításainkat. Ahhoz, hogy az R nyelvet használni tudjuk, vagyis, hogy számítógép valóban végre hajtsa szintaktikailag helyes utasításinkat, szükség van egy szoftveres környezetre, egy olyan futtató rendszerre, amely kódunkat értelmezi és végrehajtja.Az R környezet három fő összetevőt tartalmaz: (1) egy konzolt, ahová parancsainkat begépelhetjük; (2) parancsok végrehajtásáért felelős R interpretert; (3) csomagokokat. konzol és az interpreter biztosítja az R nyelven írt parancsok tényleges végrehajtását. Így tudunk adatokat beolvasni, átlagot számolni, varianciaelemzést futtatni, vagy publikációkész ábrákat létrehozni. csomagok adatokat és függvényeket tartalmaznak, például MASS csomag 88 adatobjektumot és 78 függvényt tartalmaz. függvények valamilyen tevékenységet hajtanak végre, és valójában ezeket csomag-függvényeket használjuk fel konzolban, ha bármilyen tevékenységet szeretnénk végrehajtani (például adatokat beolvasni, átlagot számolni stb.). könyv írásának időpontjában kb. 17000 csomag volt érhető el az R-hez. Csomagok 3 csoportját különböztetjük meg: standard csomagok (14 db), ajánlott csomagok (15 db) és egyéb csomagok (kb. 17000 db). standard csomagok fejlesztője az R Core Team. standard csomagok: base, compiler, datasets, grDevices, graphics, grid, methods, parallel, splines, stats, stats4, tcltk, tools, utils. Az ajánlott csomagok: KernSmooth, MASS, Matrix, boot, class, cluster, codetools, foreign, lattice, mgcv, nlme, nnet, rpart, spatial, survival. Az ajánlot csomagok közül foreign és az nlme fejlesztője az R Core Team, többit más felhasználók fejlesztették, például már említett MASS csomag fejlesztője Brian Ripley. Csomagot bárki szabadon fejleszthet és terjeszthet, az egyéb csomagok csoportját akár mi gyarapíthatjuk.R környezet már igazi szoftver, terjesztésének koordinálását az R Foundation végzi CRAN infrastruktúráján keresztül. Ez biztosítja, hogy számítógépünkre telepíthessük az R környezetet. Ezt CRAN-ról elérhető R futtatási környezetet Alap R-nek nevezzük. Fő komponensei már említett konzol parancsok begépelésére, az R értelmező begépelt parancsok végrehajtására és csomagok közül standard és ajánlott csomagok. Az Alap R telepítése után már tudunk R parancsokat végrehajtani, és nagyon sok adatelemzési probléma megoldására nyílik módunk, sőt azt mondhatjuk, hogy tetszőleges problémát megoldhatunk kisebb-nagyobb erőfeszítéssel, mert az R egy teljes értékű nyelv. Azonban sokszor érdemesebb az egyéb csomagok közül választani, hiszen könnyen elképzelhető, hogy számtalan csomag között találunk olyat, amely segítségünkre lehet speciális feladataink megoldása során. Valószínű, hogy létezik olyan csomago és benne olyan függvény, amely adatkezelési, adatelemzési, grafikai vagy publikálási feladatunkat jelentősen megkönnyíti. Az egyéb csomagok csoportjába tartozó csomagok forrása több tárhely lehet, ezek közül legjelentősebb az R Foundation által karbantartott CRAN (kb. 15000 csomaggal), Bioconductor (1741 csomaggal) és GitHub.Az R tehát egyszerre több dolgot jelent. Az R egyrészt egy magas szintű programozási nyelv, hamarosan megtanuljuk, hogyan írjunk ezen nyelven értelmes utasításokat. Másrészt nyelv körüli környezetet jelenti, amely magába foglalja konzolt, parancsaink értelmezésért felelős R interpretert, valamint azokat csomagokat, amelyekkel az R tudása kiegészíthető.\nÖsszefoglalás\n\nMinden statisztikai programcsomag, így az R , alapvetően számításigényes statisztikai eljárások kézi végrehajtásától kímél meg minket. Az R nagyon gazdag adatmanipulációs és grafikus funkciókban , támogatja reprodukálható adatelemzés végrehajtását. Az R ingyenes, többplatformos és egyik legfontosabb jellemzője, hogy parancsok útján bírhatjuk működésre. Az Alap R biztosítja konzolt parancsok begépelésére, az R interpretert parancsok tényleges végrehajtására, és jónéhány csomagba szervezett eljárást az adatelemzési feladatok elvégzéséhez. Az Alap R mindössze néhány tucat csomagot tartalmaz, standard csomagokokat és az ajánlott csomagokat, de több tízezer további csomaggal bővíthetjük az R tudását. Az adatelemzési munka során egy R környezet vesz minket körül, amely az R nyelven megírt parancsok értelmezésére és végrehajtására képes Alap R-ből, és az ún. egyéb csomagokból áll.\nFeladatokKeressünk weboldalakat, amelyek az R előnyeit és hátrányait listázzák!Keressük meg, hogy az R optimális futtatásához, milyen hardver követelmények szükségesek!Nézzünk utána, hogy ma kb. hány csomag érhető el az R-hez? Keressünk ábrát, amely bemutatja, hogy az évek során hány csomag volt elérhető az R-hez?Hol áll az R népszerűsége többi programozási nyelvhez, illetve statisztikai programcsomaghoz képest?Milyen ingyenesen elérhető, grafikus felhasználói felülettel rendelkező statisztikai programcsomagok építenek az R-re?Említettük, hogy az adatelmezési munka nem igényli az R programozói fokú ismeretét, de soroljunk fel néhány könyvet, amelyből az R programozása megtanulható!","code":""},{"path":"mi-az-r.html","id":"a-modern-r","chapter":"2 Mi az R?","heading":"2.2 A modern R","text":"\nEbben fejezetben:\n\nmegismerjük Tidyverse R fogalmát,\n\nmegtudjuk mit értünk modern R alatt.\n2014-es év az R nyelv életében meghatározó változást hozott. Egyrészt megjelent magrittr csomagban pipe operátor (%>%), amellyel olvashatóbb kódok írására nyílt lehetőség1, másrészt pipe operátorra alapozva Hadley Wickham bemutatta dplyr és tidyr csomagokat. Ezzel az R funkcionális2 oldalát úgy erősítették meg3, hogy sokszoros egymásba ágyazás során kiküszöbölték kerekzárójelek írásának problémáját. Az ebben szellemben készült csomagok listája bővült az idők folyamán, és Tidyverse nevet kapta ez csomaggyűjtemény. Jelenleg következő csomagok alkotják: ggplot2, purrr, tibble, dplyr, tidyr, stringr, readr és forcats. Ezek csomagok nem egyszerűen új funkciókkal ruházzák fel az Alap R tudását, mint általában az egyéb csomagok. Tidyverse csomagjai konzisztens módon együttműködnek, és egy új megközelítést hoznak az adatelemzési folyamatok végrehajtásában és kódok írásában. Rövidebb idő alatt hozhatunk létre könnyebben karbantartható kódokat, és műveleteink végrehajtása rendszerint gyorsabb. Amikor ebben megközelítésben hozzuk létre és hajtjuk végre utasításainkat, akkor azt mondjuk hogy Tidyverse R-t használjuk. Tidyverse R nem helyettesíti az Alap R-t, és csak bizonyos feladatokra használható. Lássunk tisztán, amit elvégezhetünk Tidyverse R-ben, azt az Alap R-ben meg tudnánk tenni, de valószínűleg több gépeléssel, lassabb és rosszabbul karbantartható kóddal.Eddig láttuk, hogy az R használatához szükséges az Alap R telepítése, majd speciális problémánknak megfelelően kiegészíthetjük az R tudását úgy, hogy telepítünk egyet vagy többet az egyéb csomagok kategóriájából. Választhatjuk akár Tidyverse csomagjait telepítésre, ugyanis így lehetőségünk nyílik Tidyverse R használatára. Utasításaink megfogalmazásának ma ez legmodernebb módja.modern R alatt lényegében azokat funkciókat értjük, amelyek Tidyverse gyűjteményben található csomagokhoz kötődnek. Ezekkel csomagokkal, gyorsabb, olvashatóbb és könnyebben karbantartható kódokat hozhatunk létre. Tidyverse használata tehát erősen javasolt, de ebben könyvben “hagyományos”, Tidyverse R előtti lehetőségeket bemutatjuk.\nÖsszefoglalás\n\nTidyverse R egy csomaggyűjtemény az egyéb csomagok csoportjából, amely újabb szemléletű R parancsok írására ad lehetőséget. Az így készült kódjaink rendszerint gyorsabban futnak és könnyebben karbantarthatók. modern R Tidyverse R csomagjaival kiegészített Alap R, de legfőképp egy új lehetőség parancsaink megfogalmazására.\nFeladatokKi Hadley Wickham?Honnan származik pipe operátor neve?","code":""},{"path":"mi-az-r.html","id":"múlt-és-jelen","chapter":"2 Mi az R?","heading":"2.3 Múlt és jelen","text":"\nEbben fejezetben:\n\nmegismerjük az R rövid történetét és annak szereplőit,\n\nmajd egy szubjektív listával segítjük az R tanulását,\n\nilletve megismerjük az R alaptudás elemeit.\n","code":""},{"path":"mi-az-r.html","id":"szereplők-és-fogalmak","chapter":"2 Mi az R?","heading":"2.3.1 Szereplők és fogalmak","text":"Érdemes néhány szereplőt és fogalmat tisztázni az R világán belül. Az R nyelvet 1992-ben kezdte fejleszteni Ross Ihaka és Robert Gentleman, 1997-től pedig egy nagyobb csapat, az R Development Core Team vezeti fejlesztést (rövidebben R Core Team). Ettől az évtől az R hivatalosan GNU projekt része. Az R Core Team tagjai 2002-ben létrehozták R Foundation Statistical Computing (rövidebben R Foundation) közhasznú, nonprofit szervezetet, amelynek célja (1) az R folyamatos fejlesztésének biztosítása, és ehhez kapcsolódóan nyílt forráskódú számítógépes statisztikai innovációk támogatása, (2) az R fejlesztői közösség (R Core Team) hivatalos hangjaként felhasználók, intézmények és üzleti vállalkozások számára kommunikáció biztosítása, és (3) az R program és dokumentációk szerzői jogainak kezelése. szervezet rendszeresen konferenciákat, találkozókat szervez, referált folyóiratot, kézikönyveket és technikai leírásokat ad ki, valamint fenntart egy számítógépes infrastruktúrát (ez CRAN, amely levelező listákat, FTP- és Webszervereket üzemeltet). Az R Foundation hivatalos oldala – egyben az R hivatalos oldala – https://www.r-project.org/. Az R Foundation (és más önkéntesek) által üzemeltetett számítógépes hálózat neve CRAN (Comprehensive R Archive Network), amely szabad hozzáférést nyújt az R legfrissebb verziójához, az R kiterjesztéseihez (csomagokhoz) és részletes dokumentációkhoz. CRAN fő számítógépe Ausztriában található https://CRAN.R-project.org/, azonban nagyon sok naponta frissülő tükörszerver érhető el világszerte.","code":""},{"path":"mi-az-r.html","id":"alapelvek","chapter":"2 Mi az R?","heading":"2.3.2 Alapelvek","text":"Az R elsődleges célja, hasonlóan más statisztikai programcsomagokhoz, statisztikai adatelemzés, amelyet négy lépésre bonthatunk:adatok beolvasása,adatok előkészítése elemzésre,adatelemzés,eredmények publikálása.Az R mára fenti 4 tevékenység elvégzését teljes körűen támogatja. könyv célja ezek bemutatása. Mielőtt elkezdjük ezt az izgalmas utat – az R tanulmányozását – néhány alapelvet szeretnék megemlíteni, ami segíthet minket az utazásunk során:Magabiztosság - Az R nagyon nagy, így teljes megismerése nem lehet célunk. Mindig lesz valaki, aki az R egyik vagy másik részét jobban, vagy kevésbé ismeri nálunk. Ez természetes, ezen soha ne csodálkozzunk. Az eltérő ismeretek azonban az R speciális területeire vonatkoznak, az R alaptudás (2.3.3 fejezet) minden R-ben jártas felhasználó számára közös. E könyv célja ennek az alaptudásnak az átadása, melynek birtokában már kellő magabiztossággal vághatunk neki az R azon részeinek elsajátításába, amelyek az éppen elénk kerülő speciális feladat megoldásához szükségesek. Hisszük, hogy e könyv elolvasásával, mind az R alaptudás, mind kellő magabiztosság elérhetővé válik számunkra.Gyakorlás - Az R alaptudásának megszerzése némi időbe telik, ez tagadhatatlan. motiváció megtartásához viszonylag jól kell éreznünk magunkat tanulás és gyakorlás során. könyvben ezért minden fejezet végén találunk megoldandó feladatokat, amelyek között szórakoztató, érdekes és kihívást jelentő gyakorlatok szerepelnek.Svájci bicska - R nagyon sokféle statisztikai és nem-statisztikai probléma megoldására képes, sőt ugyanarra problémára nagyon sok különböző eszközt kínál. Ha elsőre nem legszebb, legoptimálisabb megoldás jut az eszünkbe, ne csüggedjünk, ez legtöbb esetben nem jelent gondot. Azon se csodálkozzunk, ha korábban megoldott problémánkra idővel újab és újabb megoldási lehetőségeket találunk.","code":""},{"path":"mi-az-r.html","id":"Ralaptudas","chapter":"2 Mi az R?","heading":"2.3.3 Az R alaptudás","text":"Melyek az R-ben való munkavégzéshez nélkülözhetetlen alapismeretek? Meggyőződésünk, ha lentebb felsorolt témakörökkel tisztában vagyunk, akkor már magabiztos R tudással rendelkezünk, és bármilyen további R témakör könnyen elsajátítható lesz. Ezekre az ismeretekre úgy gondolhatunk, mint egy ablakra, amelyen keresztül az R szinte végtelen lehetőségeinek tárháza nyílik meg előttünk. Később visszatérhetünk ehhez listához, és ellenőrizhetjük, hány elemet tudunk már kipipálni.Az R alaptudás elemei:Az R környezet alapszintű ismerete\n\naz Alap R, az RStudio és csomagok telepítése\n\nprojektek használata és R parancsok futtatása az RStudio-ban\n\naz Alap R, az RStudio és csomagok telepítése\nprojektek használata és R parancsok futtatása az RStudio-banAz R nyelv alapszintű ismerete\n\nkonstansok írása\n\nobjektumok kezelése\n\negyszerű adattípusok\n\nalapvető operátorok\n\nkifejezés fogalma\n\nfüggvényhívás lehetőségei\n\nösszetett adattípusok,\n\nvektoraritmetika szabályai\n\nkonstansok írása\nobjektumok kezelése\negyszerű adattípusok\nalapvető operátorok\nkifejezés fogalma\nfüggvényhívás lehetőségei\nösszetett adattípusok,\nvektoraritmetika szabályaiAz alapvető függvények ismerete\n\ncsomagkezelő függvények\n\nmunkaterület függvényei\n\nmatematikai függvények\n\ninput/output függvények\n\nindexelés, szűrés, rendezés\n\ninformáció kérés az objektumokról\n\negyszerű típuskonverzió\n\ntranszformáció\n\nismétlő és összesítő függvények\n\nhagyományos grafika néhány eleme\n\nggplot2 alapszintű ismerete\n\ncsomagkezelő függvények\nmunkaterület függvényei\nmatematikai függvények\ninput/output függvények\nindexelés, szűrés, rendezés\ninformáció kérés az objektumokról\negyszerű típuskonverzió\ntranszformáció\nismétlő és összesítő függvények\nhagyományos grafika néhány eleme\nggplot2 alapszintű ismereteEgyéb ismeretek\n\nszövegszerkesztési és állománykezelési ismeretek\n\ntagolt szöveges állomány fogalma\n\nreprodukálható kutatás az RMarkdown segítségével\n\nszövegszerkesztési és állománykezelési ismeretek\ntagolt szöveges állomány fogalma\nreprodukálható kutatás az RMarkdown segítségével\nÖsszefoglalás\n\nAz R fejlesztését Ross Ihaka és Robert Gentleman kezdte, majd 1997-től egy nagyobb csapat, az R Development Core Team vezeti fejlesztést. Az R Core Team tagjai 2002-ben létrehozták R Foundation Statistical Computing közhasznú, nonprofit szervezetet, amelynek fő célja az R folyamatos fejlesztésének biztosítása. szervezet fenntart egy CRAN nevű számítógépes hálózatot, amely szabad hozzáférést biztosít az R legfrissebb verziójához, csomagokhoz és részletes dokumentációkhoz.\nAz R alaptudás megszerzése elegendő magabiztosságot fog nyújtani az adatelemzési munka során, azonban vegyük figyelembe, hogy ezt csak kellő gyakorlással érhetjük el. Az R sokféle megoldást biztosít ugyanarra problémára, legyen az statisztikai vagy bármilyen más jellegű probléma.\nFeladatokKeressünk olyan statisztikai jellegű témaköröket, amelyekben az R segítségünkre lehet?Keressünk olyan nem-statisztikai jellegű témaköröket, amelyekben az R segítségünkre lehet?Nézzük át néhány online elérhető R könyvet, és hasonlítsuk össze az R alaptudás egyes elemeivel! Melyek az átfedő részek, és hol vannak különbségek?https://www.r-bloggers.com/-history--r-updated--2020/","code":""},{"path":"az-r-telepitese.html","id":"az-r-telepitese","chapter":"3 Az R telepítése","heading":"3 Az R telepítése","text":"","code":""},{"path":"az-r-telepitese.html","id":"a-fő-komponensek-telepítése","chapter":"3 Az R telepítése","heading":"3.1 A fő komponensek telepítése","text":"\nEbben fejezetben:\n\nmegismerjük az Alap R, az RStudio és csomagok telepítését.\nkorábbi fejezetekben megismertük az R világának néhány fogalmát és szereplőjét. Tudjuk, hogy az R nyelv használatához megfelelő szoftveres környezetre van szükség, amely magába foglalja az Alap R-t és az egyéb csomagok kategóriájából esetlegesen telepített csomagokat . Az R már ezen eszközök birtokában teljes körűen használható, azonban egy újabb ingyenes eszköz, az RStudio, kényelmessé és hatékonnyá teszi az adatelemzési munkát.Könyvünk legfontosabb gondolata: ma akkor tudjuk legjobban kihasználni az R lehetőségeit, és ezzel egyidőben legkényelmesebb módon elvégezni az adatelemzési feladatunkat, ha (1) az Rstudio-t használjuk, (2) projekt üzemmódban dolgozunk, és (3) RMarkdown állományokban rögzítjük az R parancsainkat. Ezt szemléletet következetesen képviseljük az egyes fejezetekben, és későbbiekben részletesebben bemutatjuk, hogyan tudjuk mindezt megvalósítani.R kényelmes használatához legelső lépés szoftveres környezet egyes elemeinek telepítése. Három fő komponens telepítésére lesz szükségünk:Alap R, amely tartalmazza konzolt, az R interpretert, illetve standard csomagokokat és az ajánlott csomagokat,RStudio, amely egy új konzollal “eltakarja” az Alap R-t, és kényelmesebb hozzáférést biztosít az Alap R interpreteréhez és csomagjaihoz.Csomagok, amelyek az egyéb csomagok nagy halmazából származnak, és telepítésükkel újabb és újabb képességekkel ruházzuk fel az Alap R-t.","code":""},{"path":"az-r-telepitese.html","id":"az-alap-r-telepítése","chapter":"3 Az R telepítése","heading":"3.1.1 Az Alap R telepítése","text":"Az Alap R telepítéséhez látogassunk el az R hivatalos letöltő oldalára: https://cran.r-project.org/. Az operációs rendszerünknek megfelelő link kiválasztásával folytassuk navigálást.Windows felhasználók Download R Windows linken, majd base linken kattintva jutnak el telepítőprogram linkjéhez: Download R X.X.X Windows. sikeres letöltés után indítsuk el telepítőt, és az alapértelmezetten felajánlott opciók nyugtázásával végezzük el telepítést. telepítést lehetőleg olyan Windows felhasználó alatt végezzük el, amelynek neve sem ékezetes karaktert, sem szóközt, sem egyéb írásjelet nem tartalmaz.macOS felhasználók Download R (Mac) OS X linken kattintva jutnak telepítőhöz: R-X.X.X.pkg. letöltés után indítsuk el telepítőt, és Next gombok segítségével végezzük el telepítést.Linux felhasználók az aktuális R verzió telepítéséhez Download R Linux linken keresztül jutnak el, ahol megfelelő disztribúció (Debian, Redhat, Suse, Ubuntu) kiválasztása után konkrét információkat kapnak telepítésről.","code":""},{"path":"az-r-telepitese.html","id":"az-rstudio-telepítése","chapter":"3 Az R telepítése","heading":"3.1.2 Az RStudio telepítése","text":"Az RStudio telepítéséhez az operációs rendszerünknek megfelelő telepítőt kell letöltenünk https://www.rstudio.com/products/rstudio/download/ oldalról. Az RStudio Desktop (Open Source License) változatára lesz szükségünk, töltsük le és telepítsük ezt számítógépünkre. telepítés során fogadjuk el az alapértelmezett opciókat. Az RStudio automatikusan megtalálja és használja korábban telepített Alap R példányunkat, így későbbiekben elegendő lesz az RStudio-t használni, azon keresztül elérhetjük az Alap R minden funkcióját.","code":""},{"path":"az-r-telepitese.html","id":"Csomagoktelepitese","chapter":"3 Az R telepítése","heading":"3.1.3 Csomagok telepítése","text":"csomagok telepítésére az Alap R vagy az RStudio elindítása után van módunk. Érdemes telepítéseket az RStudio-ból végezni. csomag fellelési helye alapján, három különböző tárhelyről mutatjuk csomagok telepítését. Látni fogjuk, hogy csomagok telepítéséhez R parancsokat fogunk használni. Ha még nem vagyunk jártasak R parancsok futtatásban, akkor 4.1 fejezet fellapozásával segítséget kaphatunk lenti parancsok kipróbálásához, de úgy eljárhatunk, hogy kihagyjuk ennek résznek az áttekintését, és később térünk vissza, amikor valóban felmerül az igény csomagok telepítésére.Az R csomagok hivatalos helye CRAN (Comprehensive R Archive Network). CRAN számítógépei tárolják nyílt forráskódú R nyelv és környezet különböző verzióinak kódjait és dokumentációit, így az összes R csomag forráskódját . Egy bírálási folyamat után bármely felhasználó csomagja CRAN-ból elérhető lehet.Az Alap R vagy az RStudio elindítása után az install.packages() függvénnyel tölthetünk le és telepíthetünk csomagot CRAN-ról. Tetszőleges csomag telepítéséhez írjuk csomag nevét idézőjelekben függvény argumentumába:psych csomagot, amely pszichológia kutatások adatainak elemzéséhez nyújt segítséget, például így telepíthetjük:csomagok másik fontos forrása Bioconductor, ahol alaposan tesztelt és igen jól dokumentált bioinformatikai témájú csomagokat találunk. Az innen elérhető csomagokat – például DESeq2 csomagot az RNS-szekvenálási elemzésekhez – következő parancsokkal telepíthetjük:csomagok harmadik fő forrása GitHub. felhasználók saját fejlesztésű csomagjaikat rendszerint először GitHub-keresztül teszik elérhetővé. Ha ezeket csomagokat szeretnénk kipróbálni, akkor felhasználó és csomag nevének birtokában következő parancsot kell kiadnunk:Például GitHub-ról telepíthető emo csomag segítségvel hangulatjeleket szúrhatunk az RMarkdown állományainkba. Ezzel sorral telepíthetjük csomagot:Fontos tudnunk, hogy csomagok telepítésére egy számítógépen egy adott R verzión belül csak egyszer van szükség. telepítő parancsainkat azonban érdemes megőrizni, hogy ha szükséges, akkor egy új R verzióban könnyen tudjuk telepíteni korábban használt csomagjainkat. Nagyon fontos, hogy telepítő parancsok futtatása után, tegyük azokat megjegyzésbe, vagyis írjunk előjük kettőskereszt (#) karaktert (részletesebb információkat megjegyzésekről ?? fejezetben olvashatunk). Ezzel tudjuk megvédeni ezeket telepítő parancsokat az újbóli, véletlen, felesleges végrehajtástól. Ennek megfelelően telepítő parancsainkat ilyen formában kell őriznünk:Vegyük figyelmbe, hogy egy csomag telepítése során más, egyéb csomagok telepítése automatikusan megtörténhet, tehát egy helyett valójában több csomag felkerülhet gépünkre. Az előfordulhat, hogy egy csomag telepítése csak akkor lesz sikeres, ha más csomagok frissítését engedélyezzük az adott csomag telepítése során. Végül előfordulhat olyan eset , amikor egy csomag telepítése valamilyen oknál fogva meghiúsul. Erról minden esetben hibaüzenet tájékoztat minket, és ez szinte minden esetben jó kiindulásul szolgál hibát okozó körülmény elhárításában. legtöbbször egy másik csomag hiánya okozza sikertelen telepítést, ezért olvassuk ki hibaüzenetből hiányolt csomag nevét, és először ennek telepítését végezzük el.\nÖsszefoglalás\n\nAz R kényelmes használatához először telepítsük az operációs rendszerünknek megfelelő Alap R, majd az RStudio legújabb verzióját. Az R képességeit csomagok segítségével bővíthetjük, ehhez legtöbbször az install.packages() parancsot használjuk.\nFeladatokMelyik az R legfrissebb változata, és milyen újdonságokat tartalmaz az előző változathoz képest?Melyik az RStudio legfrissebb változata, és milyen újdonságokat tartalmaz az előző változathoz képest?Hogyan deríthető ki, hogy egy csomagban (például MASS) csomagban, hány adatobjektum, és hány függvény található?","code":"install.packages(\"csomag_neve\")\ninstall.packages(\"psych\")        # psych csomag telepítése\nif (!requireNamespace(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\nBiocManager::install(\"DESeq2\")devtools::install_github(\"felhasznalo_neve/csomag_neve\")\ndevtools::install_github(\"hadley/emo\")\n# install.packages(\"psych\")        # psych csomag telepítése\n# if (!requireNamespace(\"BiocManager\", quietly = TRUE))\n#     install.packages(\"BiocManager\")\n# BiocManager::install(\"DESeq2\")\n# devtools::install_github(\"hadley/emo\")"},{"path":"az-r-telepitese.html","id":"a-tidyverse-r-telepítése","chapter":"3 Az R telepítése","heading":"3.2 A Tidyverse R telepítése","text":"\nEbben fejezetben:\n\nmegismerjük Tidyverse R telepítését.\nTidyverse R az R meglévő funkcióinak új szemléletű használatát jelenti. modern R jelenleg egyet jelent Tidyverse R-rel, az ebben szemléleteben készült parancsaink gyorsak, jól olvashatók és könnyen módosíthatók. Tidyverse R funkciói összesen 8 csomagba (ggplot2, purrr, tibble, dplyr, tidyr, stringr, readr és forcats) vannak szétosztva, mindegyik csomag egy-egy témakört fed le. fenti csomagok telepítése egyetlen gyűjtőcsomag tidyverse nevű csomag telepítésével elvégezhető:Tidyverse R telepítését követően csomagokban lévő függvények használatához Tidyverse R betöltésére szükség van. Hívjuk meg library() függvényt, amely ebben az esetben igen részletes tájékoztatást ad az újonnan elérhető csomagokról.Tidyverse R csomagjait jelenleg intenzíven fejlesztik, így gyakran jelenik meg újabb és újabb verzió. Érdemes ellenőrizni, hogy Tidyverse R csomagjai közül legfrissebbeket használjuk-e. Ehhez tidyverse csomag tidyverse_update() függvényét használjuk.Például fenti esetben 3 csomag frissítését javasolja tidyverse_update() függvény, és segítséget ad telepítőparancs listázásával.\nÖsszefoglalás\n\nTidyverse R használatához elegendő telepítenünk tidyverse csomagot, amely többi 8 csomag telepítését automatikusan elvégzi. telepítést install.packages(“tidyverse”) paranccsal végezzük. Időnként ellenőrizzük tidyverse::tidyverse_update() segítségével, hogy legfrissebb változatát használjuk-e Tidyverse R-t alkotó csomagoknak.\nFeladatokKeressünk rá Tidyverse R csomagjaira, és próbáljuk kideríteni az egyes csomagok fő célját, alkalmazási területeit!Derítsük ki, hogy az R Core Team vagy Hadley Wickham több R csomag szerzője!","code":"\ninstall.packages(\"tidyverse\") # a Tidyverse R telepítése\nlibrary(tidyverse)\n#> -- Attaching packages ----------------------------- tidyverse 1.3.0 --\n#> <U+221A> ggplot2 3.3.0     <U+221A> purrr   0.3.3\n#> <U+221A> tibble  3.0.0     <U+221A> dplyr   0.8.5\n#> <U+221A> tidyr   1.0.2     <U+221A> stringr 1.4.0\n#> <U+221A> readr   1.3.1     <U+221A> forcats 0.5.0\n#> -- Conflicts -------------------------------- tidyverse_conflicts() --\n#> x dplyr::filter() masks stats::filter()\n#> x dplyr::lag()    masks stats::lag()\ntidyverse::tidyverse_update()\n#> The following packages are out of date:\n#> \n#> * lubridate (1.7.4 -> 1.7.8)\n#> * purrr     (0.3.3 -> 0.3.4)\n#> * xml2      (1.2.5 -> 1.3.1)\n#> \n#> Start a clean R session then run:\n#> install.packages(c(\"lubridate\", \"purrr\", \"xml2\"))"},{"path":"az-r-telepitese.html","id":"az-r-frissítése","chapter":"3 Az R telepítése","heading":"3.3 Az R frissítése","text":"\nEbben fejezetben:\n\nbemutatjuk az Alap R, az RStudio és csomagok frissítését.\nR ideális használata során az RStudio-ban dolgozunk, és így érjük el az Alap R és az egyes csomagok szolgáltatásait. mai napig mindhárom komponenst intenzíven fejlesztik, újabb és újabb funkciókat építenek , és az esetleges hibákat rendre javítják frissebb változatokban. Az Alap R évente kb. négyszer frissül, az RStudio háromszor, és érdemes időnként azt ellenőrizni, hogy gyakran használt csomagjainkból nincs-e frissebb példány.","code":""},{"path":"az-r-telepitese.html","id":"az-alap-r-frissítése","chapter":"3 Az R telepítése","heading":"3.3.1 Az Alap R frissítése","text":"telepített Alap R verzióját az R.version.string végrehajtásával ellenőrizhetjük. Amennyiben az R hivatalos oldalán találunk frissebb példányt, akkor legalább két módszer segítségével frissíthetjük az Alap R-t. Megjegyezzük, hogy az Alap R sikeres frissítése után az RStudio automatikusan az új példányt fogja használni.1. módszer: csak Windows alatt. Windows operációs rendszer alatt rendelkezésre áll az installr csomag, amelynek pontosan az feladata, hogy kényelmesen telepíthessük számítógépünkre az R legfrissebb verzióját. Az installr régebbi verzióban lévő csomagokat az új változatba átmozgatja, és ott azok frissítését elvégzi. következő parancsok futtatására van szükség.2. módszer: általános út. Az Alap R frissítésének másik módja, hogy telepítünk egy új példányt régi R mellé. Azaz korábban látott módon letöltjük és telepítjük az Alap R legújabb változatát, pontosan úgy, mintha még nem lenne gépünkön működő R. Ez az új verzió azonban félkarú óriás mindaddig, amíg régi R verzióban használt összes csomagot nem telepítjük újra az új verzióban . Ezt magunk egyesével megtehetjük, ha korábban összegyűjtöttük csomagtelepítő parancsainkat, legyen szó akár akár CRAN, Bioconductor vagy GitHub oldaláról származó csomagokról. Ha ezek nem állnak rendelkezésre, akkor az Alap R frissítésének általános útját három lépésben foglalhatjuk össze.Indítsuk el az RStudio-t még az új R verzió telepítése előtt, és futtassuk le következő sorokat. futtatás eredménye egy bináris állomány (csomagok.rds), amely régi R összes telepített csomagjának nevét és más információkat tartalmaz. Lépjünk ki az RStudio-ból.Telepítsük az Alap R új verzióját.Telepítsük az Alap R új verzióját.Indítsuk el az RStudio-t és futtassuk le lenti sorokat. folyamat több percig eltarthat. Az RStudio már az új R verziót használja, így csomagok az új R tudását egészítik ki.Indítsuk el az RStudio-t és futtassuk le lenti sorokat. folyamat több percig eltarthat. Az RStudio már az új R verziót használja, így csomagok az új R tudását egészítik ki.Megjegyezzük, hogy fenti 2. módszer segítségével csak CRAN csomagjait tudjuk telepíteni, Bioconductor és GitHub oldalakról származó csomagok telepítését magunknak kell megismételni.","code":"\n# install.packages(\"installr\") # az installr csomag telepítése\nlibrary(installr)              # az installr csomag betöltése\nupdateR()                      # az Alap R és a csomagok frissítése\ntelepitett.csomagok <- installed.packages(priority=\"NA\")\nsaveRDS(object = telepitett.csomagok, file = \"csomagok.rds\")\ntelepitett.csomagok <- readRDS(file = \"csomagok.rds\")\ninstall.packages(pkgs=telepitett.csomagok[,1])"},{"path":"az-r-telepitese.html","id":"az-rstudio-frissítése","chapter":"3 Az R telepítése","heading":"3.3.2 Az RStudio frissítése","text":"telepített RStudio példányunk verziószámát Help / RStudio menüpont segítségével, vagy az rstudioapi::versionInfo() parancs futtatásával ellenőrizhetjük. Frissebb verzió létezéséről Help / Check Updates menüpont ad tájékoztatást. Amennyiben találunk újabb verziót az RStudio hivatalos honlapján, töltsük le az operációs rendszerünknek megfelelő változatot és indítsuk el telepítőt. Szerencsére régi RStudio beállításait örökli az új példány.","code":""},{"path":"az-r-telepitese.html","id":"csomagok-frissítése","chapter":"3 Az R telepítése","heading":"3.3.3 Csomagok frissítése","text":"korábban telepített csomagokat az RStudio Tools/Check Package Updates menüpontjával frissíthetjük. frissíthető csomagok megjelennek egy dialógus dobozban, jelöljük ki az összes csomagot és indítsuk el telepítési folyamatot. következő R parancs végrehajtásával frissíthetjük csomagjainkat.\nÖsszefoglalás\n\nAz Alap R, az RStudio és az egyes csomagok időről-időre megújulnak, érdemes évente legalább egy-két alkalommal elvégezni ezek frissítését. Az Alap R frissítése lényegében egy új verzió telepítését jelenti, régi R továbbra elérhető marad. Az RStudio frissítése után csak az új verziót használhatjuk. Az Alap R és az RStudio friss verziója hivatalos honlapokról szerezhető . csomagok frissítéséhez használjuk update.packages(ask=FALSE) parancsot.\nFeladatokAz RStudio Tools/Check Package Updates menüpontjával tájékozódjunk telepített csomagjaink állapotáról. Végezzük el szükséges frissítéseket!","code":"\nupdate.packages(ask=FALSE) "},{"path":"munka-az-r-ben.html","id":"munka-az-r-ben","chapter":"4 Munka az R-ben","heading":"4 Munka az R-ben","text":"","code":""},{"path":"munka-az-r-ben.html","id":"AzRStudiohasznalata","chapter":"4 Munka az R-ben","heading":"4.1 Az RStudio használata","text":"\nEbben fejezetben:\n\nmegismerjük az RStudio jellemzőit és felépítését,\n\nkonzolos és parancsállományos használat különbségeit,\n\nparancsállományok és az RMarkdown állományok lehetőségeit,\n\nprojekt fogalmát és használatát,\n\nés az RStudio billenytűparancsait.\n","code":""},{"path":"az-r-nyelv.html","id":"az-r-nyelv","chapter":"5 Az R nyelv","heading":"5 Az R nyelv","text":"Az előző fejezetekben megismertük az R környezetet, az Alap R, az RStudio és csomagok telepítését, megtanultuk projektek, parancsállományok és RMarkdown állományok létrehozását. Tudjuk, különböző környezetekben eltérő módszerekkel hajthatjuk végre az R parancsokat: konzolban az ENTER, Windows-os RGui-ban Ctrl+R, míg az RStudio-ban Ctrl+Enter billentyűkombinációt kell használnunk. parancsok végrehajtása közben érdemes észben tartani, ha folytatás prompt (+) feltűnik, akkor kattintsunk bele konzolba, és nyomjuk meg az Esc billentyűt, így tudunk kilépni befejezetlen sor szerkesztésébőlA fejezet példáinak kipróbáláshoz hozzunk létre egy gyakorlas nevű új projektet az RStudio-ban (File / New Project), majd készítsünk egy gyakorlas.Rmd RMarkdown állományt (File / New File / R Markdown) és egy gyakorlas.R parancsállományt (File / New File / R Script). fejezet példáit felváltva gépeljük az RMarkdown állomány R csonkjaiba, illetve parancsállomány tetszőleges soraiba. fejezet további részében az R nyelvre koncentrálunk, arra, hogy mit írunk, és nem arra, hogy hová írjuk parancsokat.","code":""},{"path":"az-r-nyelv.html","id":"adatobjektumok","chapter":"5 Az R nyelv","heading":"5.1 Adatobjektumok","text":"Ebben fejezetben:áttekintjük az egyszerű számolási lehetőségek R-ben,bevezetjük az aritmetikai operátor és kifejezés fogalmát,megismerjük az objektum létrehozását és elnevezését,több parancs elhelyezését egy sorban,és megjegyzések használatát.","code":""},{"path":"beolvasas.html","id":"beolvasas","chapter":"6 Beolvasás","heading":"6 Beolvasás","text":"","code":""},{"path":"beolvasas.html","id":"beolvas-kiir","chapter":"6 Beolvasás","heading":"6.1 Alapvető formátumok","text":"Ebben fejezetben áttekintjük:mit nevezünk tagolt szöveges állománynak, hogyan hozzuk létreinline és állományos beolvasás közötti különbségaz inline beolvasás eseteitagolt szöveges állomány beolvasása és kiírása (AR és TR)fix széles mezővel rendelkező állományok olvasásamás statisztikai programcsomagok adatállományainak olvasása és írásaobjektumok írása és olvasása bináris állományba","code":""},{"path":"adatmanipulacio.html","id":"adatmanipulacio","chapter":"7 Adatmanipuláció","heading":"7 Adatmanipuláció","text":"","code":""},{"path":"adatmanipulacio.html","id":"adatkezelés-az-alap-r-ben","chapter":"7 Adatmanipuláció","heading":"7.1 Adatkezelés az Alap R-ben","text":"","code":""},{"path":"leiro-statisztika.html","id":"leiro-statisztika","chapter":"8 Leíró statisztika","heading":"8 Leíró statisztika","text":"","code":""},{"path":"grafika-az-r-ben.html","id":"grafika-az-r-ben","chapter":"9 Grafika az R-ben","heading":"9 Grafika az R-ben","text":"Ebben fejezetben áttekintjük:az R grafikus rendszereia hagyományos grafika alapfogalmaimagasszintű és alacsonyszintű rajzfüggvények hagyományos grafikábana ggplot2 rendszer alapelveábrák létrehozása ggplot2-benábrák mentése háttértárra\n","code":""},{"path":"hipotezisvizsgalatok.html","id":"hipotezisvizsgalatok","chapter":"10 Hipotézisvizsgálatok","heading":"10 Hipotézisvizsgálatok","text":"Ebben fejezetben statisztika azon klasszikus próbáit foglaltuk össze, amelyek jellemzően egy- vagy kétmintás hipotézisvizsgálatokat jelentenek. Az öt alfejezet nullhipotézisben szereplő állításoknak és paramétereknek megfelelően statisztikai próbák különböző csoportjait fedi le:várható értékre vonatkozó próbákmediánra vonatkozó nemparaméteres próbákvalószínűségre vonatkozó próbákvarianciára vonatkozó próbákaz eloszlás egészére vonatkozó próbák.\n","code":""},{"path":"publikacio.html","id":"publikacio","chapter":"11 Publikáció","heading":"11 Publikáció","text":"","code":""},{"path":"publikacio.html","id":"reprodukálható-kutatás","chapter":"11 Publikáció","heading":"11.1 Reprodukálható kutatás","text":"kutatás és oktatás világában jelentős elmozdulás figyelhető meg reprodukálható kutatás felé.igénye felé. „Az akadémiai kutatás végső terméke papír, laboratóriumi jegyzetfüzetekkel és teljes számítási környezettel együtt az eredmények előállítása érdekében, mint például kód, az adatok stb., Amelyek felhasználhatók az eredmények reprodukálására és új munka létrehozására kutatás ”(Wikipedia).Ennek következménye az, hogy meg kell változtatnunk szokásainkat, és minden kéziratunkat, előadásainkat, házi feladatainkat stb. Tiszta és reprodukálható formában kell elkezdenünk, azaz ha valaki megadja kódot, akkor ez személy pontosan reprodukálhatja dokumentumot. Ez dokumentum megkönnyíti ezt az átmenetet az R Markdown segítségével.","code":""},{"path":"irodalomjegyzek.html","id":"irodalomjegyzek","chapter":"Irodalomjegyzék","heading":"Irodalomjegyzék","text":"","code":""},{"path":"megoldasok.html","id":"megoldasok","chapter":"Megoldások","heading":"Megoldások","text":"","code":""}]
